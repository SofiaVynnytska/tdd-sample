<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">

    <!-- Data source and Hibernate -->

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="${jdbc.connection.pool.size}"/>
        <property name="maxIdle" value="10"/>
        <property name="maxWait" value="${jdbc.connection.pool.timeout}"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="testOnBorrow" value="true" />
        <property name="validationQuery" value="/* ping */" />
        <property name="validationQueryTimeout" value="5" />
        <property name="connectionProperties" value="${jdbc.connection.properties}"/>
    </bean>

    <util:map id="hibernateProperties" map-class="java.util.Properties">
        <entry key="hibernate.dialect" value="org.hibernate.dialect.MySQL5Dialect"/>
        <entry key="hibernate.connection.release_mode" value="after_transaction"/>
        <entry key="hibernate.cache.use_second_level_cache" value="false"/>
        <entry key="hibernate.cache.use_query_cache" value="false"/>
        <entry key="hibernate.cache.provider_class" value="org.hibernate.cache.NoCacheProvider"/>
    </util:map>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="hibernate/hibernate.cfg.xml"/>
        <property name="hibernateProperties" ref="hibernateProperties"/>
    </bean>

    <!-- DAO -->

    <bean id="bookDao" class="com.xpinjection.tdd.db.hibernate.HibernateBookDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="agileGuruDao" class="com.xpinjection.tdd.db.hibernate.HibernateAgileGuruDao">
        <constructor-arg ref="sessionFactory"/>
    </bean>
    <!-- Database transactions and caching -->

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="dataOperations" expression="execution(public * com.xpinjection.tdd.db.hibernate.Hibernate*.*(..))"/>

        <aop:advisor order="5" id="daoDatabaseTransactions" advice-ref="transactionAdvice" pointcut-ref="dataOperations"/>
    </aop:config>
</beans>
